#
# Copyright (c) 2019 Stackinsights to present
# All rights reserved
#

# static configuration of OAPServer
apiVersion: operator.stackinsights.apache.org/v1alpha1
kind: OAPServerDynamicConfig
metadata:
  name: oapserverdynamicconfig-sample
  namespace: stackinsights-system
spec:
  # The version of OAPServer
  version: 9.5.0
  # The labelselector of OAPServer's dynamic configuration, it should be the same as labelSelector of OAPServerConfig
  labelSelector: app=collector,release=stackinsights
  data:
    - name: agent-analyzer.default.slowDBAccessThreshold
      value: default:200,mongodb:50
    - name: alarm.default.alarm-settings
      value: |-
        rules:
          # Rule unique name, must be ended with `_rule`.
          service_resp_time_rule:
            metrics-name: service_resp_time
            op: ">"
            threshold: 1000
            period: 10
            count: 3
            silence-period: 5
            message: Response time of service {name} is more than 1000ms in 3 minutes of last 10 minutes.
          #service_sla_rule:
            # Metrics value need to be long, double or int
            metrics-name: service_sla
            op: "<"
            threshold: 8000
            # The length of time to evaluate the metrics
            period: 10
            # How many times after the metrics match the condition, will trigger alarm
            count: 2
            # How many times of checks, the alarm keeps silence after alarm triggered, default as same as period.
            silence-period: 3
            message: Successful rate of service {name} is lower than 80% in 2 minutes of last 10 minutes
          service_resp_time_percentile_rule:
            # Metrics value need to be long, double or int
            metrics-name: service_percentile
            op: ">"
            threshold: 1000,1000,1000,1000,1000
            period: 10
            count: 3
            silence-period: 5
            message: Percentile response time of service {name} alarm in 3 minutes of last 10 minutes, due to more than one condition of p50 > 1000, p75 > 1000, p90 > 1000, p95 > 1000, p99 > 1000
          #service_instance_resp_time_rule:
            metrics-name: service_instance_resp_time
            op: ">"
            threshold: 1000
            period: 10
            count: 2
            silence-period: 5
            message: Response time of service instance {name} is more than 1000ms in 2 minutes of last 10 minutes
          #database_access_resp_time_rule:
            metrics-name: database_access_resp_time
            threshold: 1000
            op: ">"
            period: 10
            count: 2
            message: Response time of database access {name} is more than 1000ms in 2 minutes of last 10 minutes
          #endpoint_relation_resp_time_rule:
            metrics-name: endpoint_relation_resp_time
            threshold: 1000
            op: ">"
            period: 10
            count: 2
            message: Response time of endpoint relation {name} is more than 1000ms in 2 minutes of last 10 minutes
        #  Active endpoint related metrics alarm will cost more memory than service and service instance metrics alarm.
        #  Because the number of endpoint is much more than service and instance.
        #
        #  endpoint_resp_time_rule:
        #    metrics-name: endpoint_resp_time
        #    op: ">"
        #    threshold: 1000
        #    period: 10
        #    count: 2
        #    silence-period: 5
        #    message: Response time of endpoint {name} is more than 1000ms in 2 minutes of last 10 minutes

        webhooks:
        #  - http://127.0.0.1/notify/
        #  - http://127.0.0.1/go-wechat/
    - name: core.default.apdexThreshold
      value: |-
        # 0.1 is only for testing
        default: 0.1
        # example:
        # the threshold of service "tomcat" is 1s
        # tomcat: 1000
        # the threshold of service "springboot1" is 50ms
        # springboot1: 50
    - name: agent-analyzer.default.uninstrumentedGateways
      value: |-
        #gateways:
        #  - name: proxy0
        #    instances:
        #      - host: 127.0.0.1 # the host/ip of this gateway instance
        #        port: 9099 # the port of this gateway instance, defaults to 80
