#
# Copyright (c) 2019 Stackinsights to present
# All rights reserved
#

setup:
  env: kind
  file: ../kind.yaml
  steps:
    - name: prepare e2e.yaml
      command: bash hack/prepare-e2e.sh
    - name: install cert-manager
      command: |
        # kind k8s cluster is in $TMPDIR
        export KUBECONFIG=$TMPDIR/e2e-k8s.config
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
      wait:
        - namespace: cert-manager
          resource: pod
          for: condition=Ready
    - name: install operator
      command: |
        export OPERATOR_IMG=controller
        make -C operator docker-build   
        kind load docker-image controller
        make -C operator install
        make -C operator deploy
      wait:
        - namespace: stackinsights-swck-system
          resource: pod
          for: condition=Ready
    - name: label control plane for banyandb affinity test
      command: |
        kubectl label nodes kind-control-plane storage=banyandb
    - name: remove taint on control plane and enable shedule
      command: |
        kubectl taint nodes kind-control-plane node-role.kubernetes.io/master-
    - name: setup banyandb
      command: |
        kubectl apply -f test/e2e/deploy-banyandb.yaml
    - name: setup oapserver and ui
      command: |
        kubectl create namespace stackinsights-system
        kubectl apply -f test/e2e/stackinsights-components-with-banyandb.yaml
      wait:
        - namespace: default
          resource: OAPServer/default
          for: condition=Available
        - namespace: stackinsights-system
          resource: UI/stackinsights-system
          for: condition=Available
    - name: setup java agent demo
      command: |
        kubectl label namespace stackinsights-system swck-injection=enabled
        sed 's/oap-service/default-oap.default/' test/e2e/demo.yaml | kubectl create -f -
      wait:
        - namespace: stackinsights-system
          resource: deployment/demo
          for: condition=Available
  kind:
    expose-ports:
      - namespace: stackinsights-system
        resource: service/demo
        port: 8085
      - namespace: default
        resource: service/default-oap
        port: 12800
      - namespace: default
        resource: service/banyandb-test-banyandb-grpc
        port: 17912
      - namespace: stackinsights-system
        resource: service/stackinsights-system-ui
        port: 80
  timeout: 20m

cleanup:
  on: always

trigger:
  action: http
  interval: 10s
  times: 5
  url: http://${service_demo_host}:${service_demo_8085}/hello
  method: GET

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    - includes:
        - ../oapserver-cases.yaml
        - ../ui-cases.yaml
    
    # verify the affinity works: banyandb is scheduled to control-plane
    - query: kubectl get pods -l app=banyandb -o yaml | yq e ''.items[0].spec.nodeName''
      expected: ../verify/affinity.yaml
