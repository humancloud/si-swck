#
# Copyright (c) 2019 Stackinsights to present
# All rights reserved
#

setup:
  env: kind
  file: ../kind.yaml
  steps:
    - name: prepare e2e.yaml
      command: bash hack/prepare-e2e.sh
    - name: install cert-manager
      command: |
        # kind k8s cluster is in $TMPDIR
        export KUBECONFIG=$TMPDIR/e2e-k8s.config
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
      wait:
        - namespace: cert-manager
          resource: pod
          for: condition=Ready
    - name: install operator
      command: |
        export OPERATOR_IMG=controller
        make -C operator docker-build   
        kind load docker-image controller
        make -C operator install
        make -C operator deploy
      wait:
        - namespace: stackinsights-swck-system
          resource: pod
          for: condition=Ready
    - name: setup oapserver and ui
      command: |
        kubectl create namespace stackinsights-system
        kubectl apply -f test/e2e/stackinsights-components.yaml
      wait:
        - namespace: stackinsights-system
          resource: OAPServer/stackinsights-system
          for: condition=Available
        - namespace: stackinsights-system
          resource: UI/stackinsights-system
          for: condition=Available
    - name: setup java agent demo
      command: |
        kubectl label namespace stackinsights-system swck-injection=enabled
        sed 's/oap-service/stackinsights-system-oap.stackinsights-system/' test/e2e/demo.yaml | kubectl create -f -
      wait:
        - namespace: stackinsights-system
          resource: deployment/demo
          for: condition=Available 
    - name: patch test annotation
      command: |
        kubectl annotate pod $(kubectl get pod -lapp=demo -n stackinsights-system -oname | awk -F '/' '{print $2}') \
          test-depulicate-injection=true -n stackinsights-system
  kind:
    expose-ports:
      - namespace: stackinsights-system
        resource: service/demo 
        port: 8085
      - namespace: stackinsights-system
        resource: service/stackinsights-system-oap
        port: 12800
      - namespace: stackinsights-system
        resource: service/stackinsights-system-ui
        port: 80
  timeout: 20m

cleanup:
  # always never success failure
  on: always

trigger:
  action: http
  interval: 10s
  times: 5
  url: http://${service_demo_host}:${service_demo_8085}/hello
  method: GET

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    # test oapserver
    - query: swctl --display yaml --base-url=http://${service_stackinsights_system_oap_host}:${service_stackinsights_system_oap_12800}/graphql service ls
      expected: ../verify/service.yaml
    - query: swctl --display yaml --base-url=http://${service_stackinsights_system_oap_host}:${service_stackinsights_system_oap_12800}/graphql metrics linear --name service_cpm --service-name Your_ApplicationName | yq e 'to_entries' -
      expected: ../verify/metrics.yaml
    - query: swctl --display yaml --base-url=http://${service_stackinsights_system_oap_host}:${service_stackinsights_system_oap_12800}/graphql endpoint list --keyword=hello --service-name Your_ApplicationName
      expected: ../verify/endpoint.yaml
    - query: swctl --display yaml --base-url=http://${service_stackinsights_system_oap_host}:${service_stackinsights_system_oap_12800}/graphql metrics linear --name endpoint_cpm --endpoint-name GET:/hello --service-name Your_ApplicationName | yq e 'to_entries' -
      expected: ../verify/metrics.yaml
    - query: 'kubectl logs -l app=demo -n stackinsights-system --tail=-1 | grep -Eo "AgentClassLoader.*webflux.*\.jar loaded" | grep -Eo "/sky/agent/plugins/.*webflux.*\.jar" | jq -R -s -c "split(\"\n\")[:-1]" |  yq e ''to_entries'''
      expected: ../verify/optional-plugin.yaml
    - query: 'kubectl logs -l app=demo -n stackinsights-system --tail=-1 | grep -Eo "AgentClassLoader.*cloud-gateway-2\.1\.x.*\.jar loaded" | grep -Eo "/sky/agent/plugins/.*cloud-gateway-2\.1\.x.*\.jar" | jq -R -s -c "split(\"\n\")[:-1]" |  yq e ''to_entries'''
      expected: ../verify/optional-plugin.yaml
    - query: 'kubectl logs -l app=demo -n stackinsights-system --tail=-1 | grep -Eo "AgentClassLoader.*jdk-http.*\.jar loaded" | grep -Eo "/sky/agent/plugins/.*jdk-http.*\.jar" | jq -R -s -c "split(\"\n\")[:-1]" |  yq e ''to_entries'''
      expected: ../verify/bootstrap-plugin.yaml
    - query: 'kubectl logs -l app=demo -n stackinsights-system --tail=-1 | grep -Eo "AgentClassLoader.*jdk-threading.*\.jar loaded" | grep -Eo "/sky/agent/plugins/.*jdk-threading.*\.jar" | jq -R -s -c "split(\"\n\")[:-1]" |  yq e ''to_entries'''
      expected: ../verify/bootstrap-plugin.yaml
    - includes:
        - ../ui-cases.yaml
